import { Component, OnInit, ViewChild, ElementRef, NgZone, Renderer2 } from '@angular/core';

import { Timetable } from '../_timetable/timetable';
import { Renderer } from '../_timetable/renderer';
import { Scope } from '../_timetable/_models/scope';

@Component({
  selector: 'app-day-one-timetable',
  templateUrl: './day-one-timetable.component.html',
  styleUrls: ['./day-one-timetable.component.scss']
})
export class DayOneTimetableComponent implements OnInit {

  options = {
    url: '#', // makes the event clickable
    class: 'getin', // additional css class
    data: { // each property will be added to the data-* attributes of the DOM node for this event
      id: 4,
      ticketType: 'VIP'
    },
    onClick: function(event) {
        window.alert('You clicked on the ' + event.name + ' event in ' + event.location + '. This is an example of a click handler');
      }
    // custom click handler, which is passed the event object and full timetable as context
  };


  @ViewChild('timetable') element: ElementRef;
  selector;
  timetable: Timetable;
  renderer: Renderer;
  scope: Scope;
  locations = [];
  events = [];
  zone;
  render;

  dateNow = new Date();
  timeNow = +(this.dateNow.getHours() + (this.dateNow.getMinutes() / 60)).toFixed(2);


  public count = 0;

  @ViewChild('counter')
  public myCounter: ElementRef;

  constructor(private ngzone: NgZone, private ngrender: Renderer2) {
    this.timetable = new Timetable();
    this.zone = ngzone;
    this.render = ngrender;
  }

  ngOnInit() {
    // document.getElementById('time').scrollIntoView();

    this.zone.runOutsideAngular(() => {
      setInterval(() => {
        // const timeNow = new Date();
        // const timeHours = timeNow.getHours();
        // const timeMinutes = timeNow.getMinutes();
        // const timeSeconds = timeNow.getSeconds();
        // this.time = timeHours.toString() + ',' + timeMinutes.toString() + ',' + timeSeconds.toString();
        const dateNow = new Date();
        const timeN = +(dateNow.getHours() + (dateNow.getMinutes() / 60)).toFixed(2);
        this.render.setProperty(this.myCounter.nativeElement, 'textContent', timeN);
        this.timeNow = timeN;
        console.log('time:', this.timeNow);
      }, 2000);
    });
    this.selector =  this.element.nativeElement;
    this.addTimeTable();
    console.log('this.timeNow in NgOninit: ', this.myCounter.nativeElement.innerHtml);

  }

  addTimeTable() {
    this.timetable.setScope(9, 9);

    this.timetable.addLocations(['Lord Esperanza', 'Biffty & DJ Weedim', 'Ho99o9', 'Gangue', 'Myth Syzer']);

    this.timetable.addEvent('GI', 'Lord Esperanza', new Date(2018, 8, 25, 17, 15), new Date(2018, 8, 25, 17, 30), this.options);
    this.timetable.addEvent('GI', 'Biffty & DJ Weedim', new Date(2018, 8, 25, 16, 15), new Date(2018, 8, 25, 16, 30), this.options);

    this.timetable.addEvent('GI', 'Ho99o9', new Date(2018, 8, 27, 9), new Date(2018, 8, 27, 10), { url: '#' });

    this.timetable.addEvent('GI', 'Gangue', new Date(2018, 8, 22, 9), new Date(2018, 8, 22, 10), {  onClick: function(event) {
      window.alert('You clicked on the ' + event.name + ' event in ' + event.location + '. This is an example of a click handler');
    }} );
    this.timetable.addEvent('GI', 'Myth Syzer', new Date(2018, 8, 22, 9), new Date(2018, 8, 22, 10), {  onClick: function(event) {
      window.alert('You clicked on the ' + event.name + ' event in ' + event.location + '. This is an example of a click handler');
    }} );

    this.renderer = new Renderer(this.timetable);
    this.renderer.draw(this.selector, this.timeNow);
    console.log('timeNow from day-one-component in addTimeTable method: ', this.timeNow);
  }


}
